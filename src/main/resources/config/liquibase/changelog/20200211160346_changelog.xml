<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext ../xml-schema/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/dbchangelog ../xml-schema/dbchangelog-3.6.xsd">
    <changeSet author="jkondrat" id="1581437036645-1">
        <sql dbms="postgresql">
            UPDATE organization org_to_update SET updated_at = sub.updated_at
            FROM (
            SELECT  org.id AS id, max(GREATEST(m.last_action_date, funding.last_updated, prog.last_updated, contact.last_updated, loc.last_updated, service.last_updated)) AS updated_at
            FROM organization org
            left join
            metadata m
            on m.resource_id = org.id and m.resource_class = 'Organization'
            left join
            (
            select f.organization_id org_id, max(m.last_action_date) last_updated from funding f
            join metadata m
            on m.resource_id = f.id and m.resource_class = 'Funding'
            group by org_id
            ) funding
            on funding.org_id = org.id
            left join
            (
            select p.organization_id org_id, max(m.last_action_date) last_updated from program p
            join metadata m
            on m.resource_id = p.id and m.resource_class = 'Program'
            group by org_id
            ) prog
            on prog.org_id = org.id
            left join
            (
            select c.organization_id org_id, max(m.last_action_date) last_updated from contact c
            join metadata m
            on m.resource_id = c.id and m.resource_class = 'Contact'
            group by org_id
            ) contact
            on contact.org_id = org.id
            left join
            (
            select l.organization_id org_id, max(greatest(m.last_action_date, ph.last_updated, po.last_updated, rs.last_updated, hs.last_updated)) last_updated from location l
            join metadata m
            on m.resource_id = l.id and m.resource_class = 'Location'
            left join
            (
            select a.location_id loc_id, max(m.last_action_date) last_updated from physical_address a
            join metadata m
            on m.resource_id = a.id and m.resource_class = 'PhysicalAddress'
            group by loc_id
            ) ph
            on ph.loc_id = l.id
            left join
            (
            select a.location_id loc_id, max(m.last_action_date) last_updated from postal_address a
            join metadata m
            on m.resource_id = a.id and m.resource_class = 'PostalAddress'
            group by loc_id
            ) po
            on po.loc_id = l.id
            left join
            (
            select s.location_id loc_id, max(m.last_action_date) last_updated from regular_schedule s
            join metadata m
            on m.resource_id = s.id and m.resource_class = 'RegularSchedule'
            group by loc_id
            ) rs
            on rs.loc_id = l.id
            left join
            (
            select s.location_id loc_id, max(m.last_action_date) last_updated from holiday_schedule s
            join metadata m
            on m.resource_id = s.id and m.resource_class = 'HolidaySchedule'
            group by loc_id
            ) hs
            on hs.loc_id = l.id
            group by org_id
            ) loc
            on loc.org_id = org.id
            left join
            (
            select s.organization_id org_id, max(greatest(m.last_action_date, contact.last_updated, rs.last_updated, hs.last_updated, f.last_updated, e.last_updated, doc.last_updated, tax.last_updated)) last_updated from service s
            join metadata m
            on m.resource_id = s.id and m.resource_class = 'Service'
            left join
            (
            select c.srvc_id s_id, max(m.last_action_date) last_updated from contact c
            join metadata m
            on m.resource_id = c.id and m.resource_class = 'Contact'
            group by s_id
            ) contact
            on contact.s_id = s.id
            left join
            (
            select s.srvc_id s_id, max(m.last_action_date) last_updated from regular_schedule s
            join metadata m
            on m.resource_id = s.id and m.resource_class = 'RegularSchedule'
            group by s_id
            ) rs
            on rs.s_id = s.id
            left join
            (
            select s.srvc_id s_id, max(m.last_action_date) last_updated from holiday_schedule s
            join metadata m
            on m.resource_id = s.id and m.resource_class = 'HolidaySchedule'
            group by s_id
            ) hs
            on hs.s_id = s.id
            left join
            (
            select f.srvc_id s_id, max(m.last_action_date) last_updated from funding f
            join metadata m
            on m.resource_id = f.id and m.resource_class = 'Funding'
            group by s_id
            ) f
            on f.s_id = s.id
            left join
            (
            select e.srvc_id s_id, max(m.last_action_date) last_updated from eligibility e
            join metadata m
            on m.resource_id = e.id and m.resource_class = 'Eligibility'
            group by s_id
            ) e
            on e.s_id = s.id
            left join
            (
            select d.srvc_id s_id, max(m.last_action_date) last_updated from required_document d
            join metadata m
            on m.resource_id = d.id and m.resource_class = 'RequiredDocument'
            group by s_id
            ) doc
            on doc.s_id = s.id
            left join
            (
            select t.srvc_id s_id, max(m.last_action_date) last_updated from service_taxonomy t
            join taxonomy tax on t.taxonomy_id = tax.id
            join metadata m
            on m.resource_id = tax.id and m.resource_class = 'Taxonomy'
            group by s_id
            ) tax
            on tax.s_id = s.id
            group by org_id
            ) service
            on service.org_id = org.id
            group by org.id) sub where sub.id = org_to_update.id;
        </sql>
    </changeSet>
    <changeSet author="jkondrat" id="1581437036645-2">
        <dropView viewName="activity_info" />
        <createView viewName="activity_info">
            SELECT org.id,
            org.name,
            org.alternate_name,
            org.account_id,
            org_match.last_updated,
            COALESCE(conf.recommended, 0::bigint) AS recommended,
            COALESCE(org_match.last_updated, '1900-01-01 00:00:00'::timestamp without time zone) AS recent,
            org_match.similarity
            FROM organization org
            LEFT JOIN ( SELECT conflict.resource_id,
            count(conflict.resource_id) AS recommended
            FROM conflict
            WHERE conflict.state::text = 'PENDING'::text
            GROUP BY conflict.resource_id) conf ON org.id = conf.resource_id
            LEFT JOIN ( SELECT org_match_1.organization_record_id,
            max(partner.updated_at) AS last_updated,
            max(org_match_1.similarity) AS similarity
            FROM organization_match org_match_1
            JOIN organization partner ON partner.id = org_match_1.partner_version_id
            GROUP BY org_match_1.organization_record_id) org_match ON org.id = org_match.organization_record_id
            WHERE org.active IS TRUE;
        </createView>
    </changeSet>
    <changeSet author="jkondrat" id="1581437036645-3">
        <dropView viewName="activity_record" />
    </changeSet>
</databaseChangeLog>
